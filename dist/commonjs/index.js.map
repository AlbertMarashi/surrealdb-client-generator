{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport { readFile } from 'node:fs/promises'\nimport { resolve } from 'node:path'\n\nimport { program } from 'commander'\n\nimport { configFileSchema } from './config/configFileSchema.js'\nimport { closeDb, connectDb, insertDefinitions } from './database/db.js'\nimport { generateClient } from './genClient/generateClient.js'\nimport { generateTableSchema } from './genSchema/generateTableSchema.js'\nimport { printSorry } from './helper/printSorry.js'\n\nconst main = async () => {\n  program\n    .name('surql-gen')\n    .description('Generate zod schema and typescript client code from running Surreal database')\n    .version('1.0.0')\n\n  program\n    .option('-f, --file [schemaFile]', 'a SurrealQL file containing the definitions', 'myschema.surql')\n    .option('-c, --config [configFile]', 'SurrealDB connection url', 'surql-gen.json')\n    .option('-s, --surreal [surreal]', 'SurrealDB connection url', 'ws://127.0.0.1:8000')\n    .option('-u, --username [username]', 'auth username', 'root')\n    .option('-p, --password [password]', 'auth password', 'root')\n    .option('-n, --ns [ns]', 'the namspace', 'test')\n    .option('-d, --db [db]', 'the database', 'test')\n    .option('-o, --outputFolder [outputFolder]', 'output folder', 'client_generated')\n    .option('-g, --generateClient [generateClient]', 'generate client', true)\n\n  program.parse()\n\n  const options = program.opts()\n  const __dirname = process.cwd()\n\n  if (!options.configFile) {\n    console.log('No config file provided - looking for surql-gen.json in current folder')\n  }\n\n  const configFilePath = resolve(__dirname, options.configFile || 'surql-gen.json')\n\n  let fileContent: Record<string, unknown> = {}\n  try {\n    const content = await readFile(configFilePath)\n    fileContent = JSON.parse(content.toString())\n  } catch (error) {\n    const err = error as any\n    if (err.code === 'ENOENT') {\n      console.log('No config file found.')\n    } else {\n      console.error('')\n      console.error('Please have a look at your config file!')\n      console.error('Looks like, your configuration file is invalid.')\n      console.error('')\n      throw new Error('Invalid configuration: ' + err.message)\n    }\n  }\n\n  const config = configFileSchema.parse({ ...fileContent, ...options })\n\n  await connectDb(config)\n\n  if (config.schemaFile) {\n    const schemaFilePath = resolve(__dirname, config.schemaFile)\n    let surQLContent: Buffer\n    try {\n      surQLContent = await readFile(schemaFilePath)\n    } catch (error) {\n      const err = error as any\n      if (err.code === 'ENOENT') {\n        console.error('')\n        console.error('Unable to find schema file', schemaFilePath)\n        console.error('Please check!')\n        console.error('')\n        process.exit(1)\n      } else {\n        console.error('')\n        console.error('Please have a look at your config file!')\n        console.error('Looks like, your configuration file is invalid.')\n        console.error('')\n        throw new Error('Invalid configuration: ' + err.message)\n      }\n    }\n\n    try {\n      await insertDefinitions(surQLContent.toString())\n    } catch (error) {\n      printSorry(error)\n      process.exit(1)\n    }\n  }\n\n  try {\n    await generateTableSchema(resolve(__dirname, config.outputFolder))\n\n    if (config.generateClient) {\n      await generateClient(resolve(__dirname, config.outputFolder))\n    }\n  } catch (error) {\n    printSorry(error)\n    process.exit(1)\n  }\n\n  await closeDb()\n\n  console.log('')\n  console.log('')\n  console.log('Thanks for using my tool')\n  console.log('')\n  console.log('Please üôè give a star ‚≠êÔ∏è on github: üëâ https://github.com/sebastianwessel/surrealdb-client-generator')\n  console.log('')\n  console.log('If you run into an issue, please let me know so it can get fixed.')\n  console.log('üëâ https://github.com/sebastianwessel/surrealdb-client-generator/issues')\n  console.log('')\n  console.log('Good luck with your project. üëã Cheers, and happy coding!')\n  console.log('')\n}\n\nmain()\n"]}